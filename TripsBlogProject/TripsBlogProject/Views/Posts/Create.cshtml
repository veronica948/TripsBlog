@model TripsBlogProject.Models.CreatePostModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script>
    function getNames() {
        var select = document.getElementById("names");
        var newHtml = "";
        var start = document.getElementById("Country").value;
        $.ajax({
            url: "http://localhost:49485/Service1.svc/countries/name/" + start,
            success: function (data) {

                var arr = ("" + data).split(',');
                if (arr.length != 0 && arr[0] != "") {
                    select.classList.remove('hidden');
                    for (var i = 0; i < arr.length; i++) {
                        newHtml += "<option>" + arr[i] + "</option>";
                    }
                    select.innerHTML = newHtml;
                } else {
                    select.classList.add('hidden');
                }
                
            }
        });
    }
    function insertValue() {
        var select = document.getElementById("names");
        var input = document.getElementById("Country");
        alert(input.value);
        alert(select.value);

        input.value = select.value;
    }


</script>

<h2>Create</h2>


@using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Post</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Place, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Place, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Place, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                <input id="Country" value="" oninput="getNames()" type="text" name="Country" class="form-control text-box single-line" />
                @*
    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                *@
                <br/>
                <select id="names" class="hidden" onchange="insertValue()"></select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="file" />
             </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
